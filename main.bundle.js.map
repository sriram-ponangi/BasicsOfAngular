{"version":3,"sources":["S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/$_lazy_route_resource lazy","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/app.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/app.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/app.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/app.module.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/contact-form/contact-form.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/contact-form/contact-form.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/contact-form/contact-form.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-followers/github-followers.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-followers/github-followers.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-followers/github-followers.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-profile/github-profile.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-profile/github-profile.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-profile/github-profile.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/home/home.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/home/home.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/home/home.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/nav-bar/nav-bar.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/nav-bar/nav-bar.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/nav-bar/nav-bar.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/new-courses-form/new-courses-form.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/new-courses-form/new-courses-form.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/new-courses-form/new-courses-form.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/page-not-found/page-not-found.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/page-not-found/page-not-found.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/page-not-found/page-not-found.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/posts/posts.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/posts/posts.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/posts/posts.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/service-errors/app-error-handler.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/service-errors/app-errors.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/service-errors/bad-input-error.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/service-errors/not-found-error.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/services/data.service.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/services/github-followers.service.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/services/posts.service.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/signup-form/signup-form.component.css","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/signup-form/signup-form.component.html","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/signup-form/signup-form.component.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/signup-form/username.validators.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/environments/environment.ts","S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- <h1>>***************Signup Form:>***************</h1>\\r\\n<app-signup-form></app-signup-form>\\r\\n<br/><br/><br/><br/><br/><br/>\\r\\n<h1>>***************Adding new Topics with FormArray:>***************</h1>\\r\\n<app-new-courses-form></app-new-courses-form>\\r\\n<br/><br/><br/><br/><br/><br/>\\r\\n<h1>>***************Template Form:>***************</h1>\\r\\n<app-contact-form></app-contact-form>\\r\\n<br/><br/><br/><br/><br/><br/>\\r\\n<h1>***************CONSUMING HTTP SERVIECS***************</h1>\\r\\n<app-posts></app-posts>\\r\\n<br/><br/><br/><br/><br/><br/>\\r\\n<h1>***************Github Followers>***************</h1>\\r\\n<app-github-followers></app-github-followers> -->\\r\\n\\r\\n<app-nav-bar></app-nav-bar>\\r\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ContactFormComponent } from './contact-form/contact-form.component';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { NewCoursesFormComponent } from './new-courses-form/new-courses-form.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { HttpModule } from '@angular/http';\nimport { PostsService } from './services/posts.service';\nimport { AppErrorHandler } from './service-errors/app-error-handler';\nimport { GithubFollowersComponent } from './github-followers/github-followers.component';\nimport { GithubFollowersService } from './services/github-followers.service';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { GithubProfileComponent } from './github-profile/github-profile.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactFormComponent,\n    SignupFormComponent,\n    NewCoursesFormComponent,\n    PostsComponent,\n    GithubFollowersComponent,\n    NavBarComponent,\n    PageNotFoundComponent,\n    GithubProfileComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent },\n      {path: 'home', component: HomeComponent },\n      {path: 'TemplateForm', component: SignupFormComponent },\n      {path: 'ReactiveForm', component: ContactFormComponent },\n      {path: 'FormArray', component: NewCoursesFormComponent },\n      {path: 'HttpExample', component: PostsComponent },\n      {path: 'GithubFollowers/:userid/:username', component: GithubProfileComponent },\n      {path: 'GithubFollowers', component: GithubFollowersComponent },\n      {path: '**', component: PageNotFoundComponent }\n    ])\n  ],\n  providers: [\n    PostsService,\n    GithubFollowersService,\n    {provide: ErrorHandler, useClass: AppErrorHandler}\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-control.ng-touched.ng-invalid {\\r\\n    border: 2px solid red;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/contact-form/contact-form.component.css\n// module id = ../../../../../src/app/contact-form/contact-form.component.css\n// module chunks = main","module.exports = \"<br/><br/>\\n\\n<div class=\\\"container\\\">\\n  <h3>Contact Form:</h3>\\n  <form #formGroup=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formGroup)\\\">\\n\\n    <h5>Basic Information:</h5>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstName\\\">First Name</label>\\n      <input required ngModel name=\\\"firstName\\\" #firstName=\\\"ngModel\\\" (change)=\\\"log(firstName)\\\" id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n      <h6 class=\\\"alert alert-danger\\\" *ngIf=\\\"firstName.touched && !firstName.valid\\\">First name is required</h6>\\n    </div>\\n    <!-- By add for in lable abd giving the same value as id attribut in input emenent we can \\n      focus the inout box by clicking the lable too\\n    --> \\n\\n    <h5>Contact Information:</h5>\\n    <div ngModelGroup=\\\"contact\\\" #contact=\\\"ngModelGroup\\\">\\n      <h6 class=\\\"alert alert-danger\\\" *ngIf=\\\"contact.touched && !contact.valid\\\">Something Wrong with Contact information.</h6>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"secondName\\\">Second Name</label>\\n        <input required minlength=\\\"2\\\" maxlength=\\\"30\\\" pattern=\\\"[A-Za-z]+\\\" ngModel name=\\\"secondName\\\" #secondName=\\\"ngModel\\\" (change)=\\\"log(secondName)\\\" id=\\\"secondName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"secondName.touched && secondName.errors\\\">\\n          <h6 *ngIf=\\\"secondName.errors.required\\\">Second Name is Required</h6>\\n          <h6 *ngIf=\\\"secondName.errors.minlength\\\">Minimum length should be {{secondName.errors.minlength.requiredLength}}</h6>\\n          <h6 *ngIf=\\\"secondName.errors.pattern\\\">Pattern did not match {{secondName.errors.pattern.requiredPattern}}</h6>     \\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phoneNumber\\\">Phone Number</label>\\n        <input required minlength=\\\"6\\\" maxlength=\\\"10\\\" pattern=\\\"[0-9]+\\\" ngModel name=\\\"phoneNumber\\\" #phoneNumber=\\\"ngModel\\\" (change)=\\\"log(phoneNumber)\\\" id=\\\"phoneNumber\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"phoneNumber.touched && phoneNumber.errors\\\">\\n          <h6 *ngIf=\\\"phoneNumber.errors.required\\\">Phone Number is Required</h6>\\n          <h6 *ngIf=\\\"phoneNumber.errors.pattern\\\">Phone Number should have digits only</h6>\\n          <h6 *ngIf=\\\"phoneNumber.errors.minlength\\\">Minimum length should be {{phoneNumber.errors.minlength.requiredLength}}</h6>    \\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" ngModel name=\\\"email\\\" #email=\\\"ngModel\\\" (change)=\\\"log(email)\\\" id=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"email.touched && email.errors\\\">\\n          <h6 *ngIf=\\\"email.errors.required\\\">Second Name is Required</h6>\\n          <h6 *ngIf=\\\"email.errors.pattern\\\">Pattern did not match {{email.errors.pattern.requiredPattern}}</h6>     \\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"contactMethod\\\">Prefered Contact Method:</label>\\n        <select multiple ngModel name=\\\"contactMethod\\\" id=\\\"contactMethod\\\" class=\\\"form-control\\\">\\n          <option *ngFor=\\\"let method of contactMethods\\\" [ngValue]=\\\"method\\\">{{method.name}}</option>\\n        </select>\\n      </div>\\n\\n      <div>\\n        <label>Are you Sure?</label>\\n        <div class=\\\"radio\\\">\\n          <label>\\n            <input ngModel type=\\\"radio\\\" name=\\\"sure\\\" value=\\\"yes\\\">YES\\n          </label>\\n        </div>\\n        <div class=\\\"radio\\\">\\n            <label>\\n              <input ngModel type=\\\"radio\\\" name=\\\"sure\\\" value=\\\"no\\\">NO\\n            </label>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <h5>Favorites Information:</h5>\\n    <h6>What topics do you like</h6>\\n    <div class=\\\"checkbox\\\">\\n      <label>\\n        <input type=\\\"checkbox\\\" ngModel name=\\\"likesJava\\\">JAVA      \\n      </label><br/>\\n      <label>\\n        <input type=\\\"checkbox\\\" ngModel name=\\\"likesPython\\\">PYTHON\\n      </label><br/>\\n      <label>\\n        <input type=\\\"checkbox\\\" ngModel name=\\\"likesMicroservices\\\">Microservices\\n      </label><br/>\\n      <label>\\n        <input type=\\\"checkbox\\\" ngModel #n=\\\"ngModel\\\" name=\\\"likesML\\\">AI and ML\\n      </label><br/>    \\n    </div>\\n\\n    <h5>Additional Information:</h5>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"comment\\\">Comment</label>\\n      <textarea ngModel name=\\\"comment\\\" #comment=\\\"ngModel\\\" (change)=\\\"log(comment)\\\" id=\\\"comment\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"10\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!formGroup.valid\\\">Submit</button>\\n    <br/><br/>  \\n    <h4>LIVE FORM DATA IN JSON FORM:</h4>\\n    <h6>\\n      <pre>{{formGroup.value | json }}</pre>\\n    </h6>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/contact-form/contact-form.component.html\n// module id = ../../../../../src/app/contact-form/contact-form.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.css']\n})\nexport class ContactFormComponent {\n\n  contactMethods = [\n    {id: 1, name: 'Email'},\n    {id: 2, name: 'Phone'}\n  ];\n\n  log(obj) {\n    console.log(obj);\n  }\n\n  onSubmit(fg) {\n    // console.log(JSON.stringify(fg.value));\n    console.log(fg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/contact-form/contact-form.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.avatar { \\r\\n    width: 80px;\\r\\n    height: 80px;\\r\\n    border-radius: 100%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-followers/github-followers.component.css\n// module id = ../../../../../src/app/github-followers/github-followers.component.css\n// module chunks = main","module.exports = \"<br/><br/>\\n\\n<div class=\\\"container\\\"> \\n  <h3>Github Followers:</h3> \\n  <br/>  \\n  <div *ngFor=\\\"let follower of followers\\\" class=\\\"media\\\">\\n    <div class=\\\"media-left\\\">\\n      <a href=\\\"#\\\">\\n        <img class=\\\"avatar media-object\\\" src=\\\"{{ follower.avatar_url }}\\\" alt=\\\"...\\\">\\n      </a>\\n    </div>\\n    <div class=\\\"media-body\\\">\\n      <h4 class=\\\"media-heading\\\">\\n        <a [routerLink]=\\\"['/GithubFollowers',follower.id,follower.login]\\\">{{ follower.login }}</a>\\n      </h4>\\n      <a [routerLink]=\\\"['/GithubFollowers',follower.id,follower.login]\\\">{{ follower.html_url }}</a>\\n    </div>\\n    <br/><br/><br/><br/>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-followers/github-followers.component.html\n// module id = ../../../../../src/app/github-followers/github-followers.component.html\n// module chunks = main","import { GithubFollowersService } from './../services/github-followers.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/combineLatest';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n@Component({\n  selector: 'app-github-followers',\n  templateUrl: './github-followers.component.html',\n  styleUrls: ['./github-followers.component.css']\n})\nexport class GithubFollowersComponent implements OnInit {\n  followers: any[];\n\n  constructor(private service: GithubFollowersService, private routeParams: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.service.getAll()\n      .subscribe(followers => this.followers = followers);\n    /*\n    // Alternate way: to see the usage of\n    // combineLatest, map and switchMap\n    Observable.combineLatest([\n      this.routeParams.paramMap,\n      this.routeParams.queryParamMap\n    ])\n    .switchMap(combined => {\n      // here combined is of type Observable<ParamMap[]> ie., combineLatest() returned it\n      const id = combined[0].get('userid');\n      const page = combined[1].get('page');\n      return this.service.getAll();\n      // .subscribe(followers => this.followers = followers);\n\n      // if we use map then we return Observable<any>\n      // if we use switchMap then we return any\n    })\n    .subscribe(\n      combinedObservable => {\n        this.followers = combinedObservable;\n      //  We can call a service to by using the inputs from the two observables related to route parametrs too...\n      //  this.service.getAll(id,page)\n      //   .subscribe(data =>{});\n      });\n      */\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-followers/github-followers.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-profile/github-profile.component.css\n// module id = ../../../../../src/app/github-profile/github-profile.component.css\n// module chunks = main","module.exports = \"<br/><br/>\\n\\n<div class=\\\"container\\\"> \\n  <div>\\n    github-profile works! #id={{id}}\\n    <br/><h6>Note:</h6>\\n    New component is not created only the route parametes are changed.\\n  </div>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/GithubFollowers',1234,sriram]\\\">NEXT</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"/GithubFollowers\\\">BACK</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"programaticNavigator()\\\">Programatic Navigation</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-profile/github-profile.component.html\n// module id = ../../../../../src/app/github-profile/github-profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { reject } from 'q';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/combineLatest';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n@Component({\n  selector: 'app-github-profile',\n  templateUrl: './github-profile.component.html',\n  styleUrls: ['./github-profile.component.css']\n})\nexport class GithubProfileComponent implements OnInit {\n  private id;\n  constructor(private routeParams: ActivatedRoute, private route: Router) { }\n\n  ngOnInit() {\n    /* this.id = this.routeParams.snapshot.paramMap.get('userid');\n      this method is used to route parameters when we don't have to navigate to the same component.....\n    */\n    this.routeParams.paramMap\n      .subscribe(params => {\n        this.id =  +params.get('userid');\n        console.log(this.id);\n      });\n\n       Observable.combineLatest([\n        this.routeParams.paramMap,\n        this.routeParams.queryParamMap\n        ]).subscribe(\n        combinedObservable => {\n          const id = combinedObservable[0].get('userid');\n          const page = combinedObservable[1].get('page');\n          console.log(id, page);\n        //  We can call a service to by using the inputs from the two observables related to route parametrs too...\n        //  this.service.getAll(id,page)\n        //   .subscribe(data =>{});\n        }\n      );\n\n  }\n\n  programaticNavigator() {\n    this.route.navigate(['/HttpExample'], {\n      queryParams: {page: 1, order: 'new'}\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/github-profile/github-profile.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<br/><br/>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <h4>What is Angular? </h4> \\n    <p>\\n      Angular is a platform that makes it easy to build applications with the web.\\n      Angular combines declarative templates, dependency injection, end to end tooling,\\n      and integrated best practices to solve development challenges. Angular empowers\\n      developers to build applications that live on the web, mobile, or the desktop.\\n    </p>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/nav-bar/nav-bar.component.css\n// module id = ../../../../../src/app/nav-bar/nav-bar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h2>Angular Basics</h2>\\n  <br>\\n  <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/home\\\" [queryParams]=\\\"{page:1,order:'nav'}\\\">Home</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/TemplateForm\\\">Template Form</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/FormArray\\\">FormArray Example</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/ReactiveForm\\\">Reactive Form</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/HttpExample\\\">Consuming HTTP Services</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/GithubFollowers\\\">Github Followers</a>\\n    </li>\\n  </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/nav-bar/nav-bar.component.html\n// module id = ../../../../../src/app/nav-bar/nav-bar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/nav-bar/nav-bar.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/new-courses-form/new-courses-form.component.css\n// module id = ../../../../../src/app/new-courses-form/new-courses-form.component.css\n// module chunks = main","module.exports = \"<br/><br/>\\n\\n<div class=\\\"container\\\">\\n  <h3>Adding new Topics with FormArray:</h3>\\n  <form>\\n    <label for=\\\"topic\\\">Topic name:</label>\\n    <input \\n    type=\\\"text\\\" \\n    class=\\\"form-control\\\"\\n    id=\\\"topic\\\"\\n    (keyup.enter)=\\\"addTopic(topic)\\\"\\n    #topic>\\n    <ul class=\\\"list-group\\\">\\n      <li\\n      (click)=\\\"removeTopic(topic)\\\" \\n      *ngFor=\\\"let topic of topics.controls\\\"\\n      class=\\\"list-group-item\\\">\\n    {{topic.value}}\\n    </li>\\n    </ul>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/new-courses-form/new-courses-form.component.html\n// module id = ../../../../../src/app/new-courses-form/new-courses-form.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-new-courses-form',\n  templateUrl: './new-courses-form.component.html',\n  styleUrls: ['./new-courses-form.component.css']\n})\nexport class NewCoursesFormComponent {\n\n  form = new FormGroup({\n    topics: new FormArray([])\n  });\n\n  removeTopic(topic: FormControl) {\n    const index = this.topics.controls.indexOf(topic);\n    this.topics.removeAt(index);\n  }\n\n  addTopic(topic: HTMLInputElement) {\n    this.topics.push(new FormControl(topic.value));\n    topic.value = ''; // setting input to blank after enter\n  }\n\n  get topics() {\n    return this.form.get('topics')  as FormArray;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/new-courses-form/new-courses-form.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/page-not-found/page-not-found.component.css\n// module id = ../../../../../src/app/page-not-found/page-not-found.component.css\n// module chunks = main","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/page-not-found/page-not-found.component.html\n// module id = ../../../../../src/app/page-not-found/page-not-found.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/page-not-found/page-not-found.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/posts/posts.component.css\n// module id = ../../../../../src/app/posts/posts.component.css\n// module chunks = main","module.exports = \"<br/><br/>\\n\\n<div class=\\\"container\\\"> \\n  <h3>Consuming HTTP Services Example:</h3> \\n  <br/>\\n  <label for=\\\"myPostName\\\">Enter new post name:</label>\\n  <input\\n    (keyup.enter)=\\\"createPost(title)\\\"\\n    id=\\\"myPostName\\\"\\n    #title\\n    type=\\\"text\\\" class=\\\"form-control\\\">\\n\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let post of posts\\\">  \\n      <button (click)=\\\"updatePost(post)\\\"class=\\\"btn btn-default btn-sm btn-success\\\">Update</button>\\n      <button (click)=\\\"deletePost(post)\\\"class=\\\"btn btn-default btn-sm btn-danger\\\">Delete</button>\\n      {{post.title}}\\n    </li>\\n    \\n  </ul>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/posts/posts.component.html\n// module id = ../../../../../src/app/posts/posts.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { PostsService } from '../services/posts.service';\nimport { AppError } from '../service-errors/app-errors';\nimport { NotFoundError } from '../service-errors/not-found-error';\nimport { BadInputError } from '../service-errors/bad-input-error';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n  posts: any[];\n\n  constructor(private service: PostsService) {\n  }\n\n  ngOnInit() {\n    this.service.getAll()\n    .subscribe(postResponse => this.posts = postResponse);\n      /*}, //instaed of handling the error here the error propagates and finally hits the AppErrorHandler class\n      (error: Response) => {\n        alert('Unexpected error occured!');\n        console.log(error);\n      }*/\n  }\n\n  createPost(input: HTMLInputElement) {\n    const post = {title: input.value};\n    this.posts.splice(0, 0, post); // *********OPTIMISTIC APPROACH******ADDING THE INPUT BEFORE THE SERVICE CALL *********\n    // input.value\n    this.service.create(post)\n      .subscribe(response => {\n        post['id'] = response.json().id;\n        // this.posts.push() method only adds at the end and splice can add in the begining\n        // this.posts.splice(0, 0, post); // *********PESIMISTIC APPROACH******ADDING THE INPUT AFTER THE SERVICE CALL *********\n      }, (error: AppError) => {\n\n        this.posts.splice(0, 1); // *********OPTIMISTIC APPROACH******ROLLBACK IF CALL TO THE SERVER FAILS\n\n        if (error instanceof BadInputError) {\n          alert('Bad Request');\n          // this.form.setErrors(error.OriginalError);\n        } else {\n          /*alert('Unexpected error occured!');\n          console.log(error);*/\n          // here we need to throw the error so that the Global Error Handler takes incharge\n          // else the error is assumed tobe handled.\n          throw error;\n        }\n      });\n  }\n\n  updatePost(post) {\n     this.service.update(post)\n     .subscribe(response => {\n       console.log(response);\n     }/*, (error: Response) => {\n      //instaed of handling the error here the error propagates and finally hits the AppErrorHandler class\n      alert('Unexpected error occured!');\n      console.log(error);\n    }*/);\n    // this.http.put(this.url, JSON.stringify(post));\n  }\n\n  deletePost(post) {\n    const index = this.posts.indexOf(post); // *********OPTIMISTIC APPROACH******ADDING THE INPUT BEFORE THE SERVICE CALL *********\n    this.posts.splice(index, 1); // *********OPTIMISTIC APPROACH******ADDING THE INPUT BEFORE THE SERVICE CALL *********\n\n     this.service.delete(post.id)// 3555)\n     .subscribe(() => {\n       // const index = this.posts.indexOf(post); // *********PESIMISTIC APPROACH******ADDING THE INPUT AFTER THE SERVICE CALL *********\n       // this.posts.splice(index, 1); // *********PESIMISTIC APPROACH******ADDING THE INPUT AFTER THE SERVICE CALL *********\n     }, (error: AppError) => {\n      this.posts.splice(index, 0, post); // *********OPTIMISTIC APPROACH******ROLLBACK IF CALL TO THE SERVER FAILS\n\n      if (error instanceof NotFoundError) {\n        alert('This post has already been deleted.');\n      } else {\n          // alert('Unexpected error occured!');\n          // console.log(error);\n          // here we need to throw the error so that the Global Error Handler takes incharge\n          // else the error is assumed tobe handled.\n        throw error;\n      }\n    });\n  }\n\n\n\n  /*\n     Learning about Observable and Promises\n  */\n  myDeletePosts(post) {\n    this.service.myDelete(post.id); // Observables don't work without subscribe() but for promises this is enough\n    // this.service.delete(post.id)\n    //   .subscribe();\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/posts/posts.component.ts","import { ErrorHandler } from '@angular/core';\r\n\r\nexport class AppErrorHandler implements ErrorHandler {\r\n\r\n    handleError(error) {\r\n        alert('Unexpected error occured!');\r\n        console.log(error);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/service-errors/app-error-handler.ts","\r\nexport class AppError {\r\n    constructor(public OriginalError?: any) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/service-errors/app-errors.ts","import { AppError } from './app-errors';\r\nexport class BadInputError extends AppError {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/service-errors/bad-input-error.ts","import { AppError } from './app-errors';\r\n\r\nexport class NotFoundError extends AppError {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/service-errors/not-found-error.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { NotFoundError } from '../service-errors/not-found-error';\r\nimport { AppError } from '../service-errors/app-errors';\r\nimport { BadInputError } from '../service-errors/bad-input-error';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  constructor(private url, private http: Http) { }\r\n\r\n  getAll() {\r\n    return this.http.get(this.url)\r\n        .map(response => response.json())\r\n        .catch(this.handleErrors);\r\n  }\r\n  create(resource) {\r\n    // return Observable.throw(new AppError()); // TO CHECK OPTIMISTIC APPROACH\r\n    return this.http.post(this.url, JSON.stringify(resource))\r\n    .catch(this.handleErrors); /*(error: Response) => {\r\n      if (error.status === 400) {\r\n        return Observable.throw(new BadInputError(error.json()));\r\n      }\r\n      return Observable.throw(new AppError(error.json()));\r\n    });*/\r\n  }\r\n  update(resource) {\r\n    return this.http.patch(this.url + '/' + resource.id, JSON.stringify({ isRead : true}))\r\n    .catch(this.handleErrors);\r\n  }\r\n  delete(id) {\r\n    return this.http.delete(this.url + '/' + id)\r\n      .catch(/*(error: Response) => {\r\n        if (error.status === 404) {\r\n          return Observable.throw(new NotFoundError(error));\r\n        }\r\n        return Observable.throw(new AppError(error));\r\n      } // Instead of using an arrow function we can do this explicitly also (implementation of arrowfunction as handleErrors())\r\n      */this.handleErrors);\r\n  }\r\n  myDelete(id) {\r\n    // OBSERVABLES and PROMISES EXAMPLE:\r\n    return this.http.delete(this.url + '/' + id)\r\n    .map(response => response.json())\r\n    .toPromise()\r\n    .catch(this.handleErrors);\r\n  }\r\n\r\n  private handleErrors(error: Response) {\r\n    if (error.status === 400) {\r\n      return Observable.throw(new BadInputError(error.json()));\r\n    } else if (error.status === 404) {\r\n      return Observable.throw(new NotFoundError(error));\r\n    }\r\n    return Observable.throw(new AppError(error));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/services/data.service.ts","import { DataService } from './data.service';\r\nimport { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GithubFollowersService extends DataService {\r\n\r\n  constructor(http: Http) {\r\n    super('https://api.github.com/users/sivaram143/followers', http);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/services/github-followers.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { DataService } from './data.service';\n\n\n@Injectable()\nexport class PostsService extends DataService {\n\n  constructor(http: Http) {\n    super('http://jsonplaceholder.typicode.com/posts', http);\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/services/posts.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/signup-form/signup-form.component.css\n// module id = ../../../../../src/app/signup-form/signup-form.component.css\n// module chunks = main","module.exports = \"<br/><br/>\\n\\n<div class=\\\"container\\\">\\n    <h3>Signup Form:</h3>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.errors && form.errors.invalidLogin\\\">Invalid username or password</div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">User-name</label>\\n            <input\\n                formControlName=\\\"username\\\" \\n                id=\\\"username\\\" \\n                type=\\\"text\\\" \\n                class=\\\"form-control\\\">\\n            <div *ngIf=\\\"username.pending\\\">Checking for uniqueness...</div>\\n            <div *ngIf=\\\"username.touched && username.errors\\\">\\n                <div *ngIf=\\\"username.touched && username.errors.required\\\" class=\\\"alert alert-danger\\\">Username is required.</div>\\n                <div *ngIf=\\\"username.touched && username.errors.cannotContainSpace\\\" class=\\\"alert alert-danger\\\">Username should not have spaces.</div>\\n                <div *ngIf=\\\"username.touched && username.errors.shouldBeUnique\\\" class=\\\"alert alert-danger\\\">Username should be unique</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input\\n                formControlName=\\\"password\\\" \\n                id=\\\"password\\\" \\n                type=\\\"text\\\" \\n                class=\\\"form-control\\\">\\n            <div *ngIf=\\\"password.touched && password.errors\\\">\\n                <div *ngIf=\\\"password.touched && password.errors.required\\\" class=\\\"alert alert-danger\\\">Password is required.</div>\\n                <div *ngIf=\\\"password.touched && password.errors.minlength\\\" class=\\\"alert alert-danger\\\">Password should have minimum {{password.errors.minlength.requiredLength}} characters.</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" formGroupName=\\\"optional\\\">\\n            <h3>Optional Group:</h3>\\n            <label for=\\\"comment\\\">Comment:</label>\\n            <input\\n            formControlName=\\\"comment\\\" \\n            id=\\\"comment\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\"> \\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"commented?commented=false:commented=true\\\">Submit Comment</button>\\n            <div *ngIf=\\\"commented\\\" class=\\\"alert alert-success\\\">\\n                <strong>Adding Comment successful!</strong>\\n            </div>\\n            <br/>\\n        </div>\\n        <button class=\\\"btn btn-primary\\\">Sign Up</button>\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Log In</button>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/signup-form/signup-form.component.html\n// module id = ../../../../../src/app/signup-form/signup-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { UsernameValidators } from './username.validators';\n\n@Component({\n  selector: 'app-signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.css']\n})\nexport class SignupFormComponent implements OnInit {\n\n  form = new FormGroup({\n    optional: new FormGroup({\n      comment: new FormControl()\n    }),\n    username: new FormControl('', [Validators.required,\n       UsernameValidators.cannotContainSpace],\n       UsernameValidators.shouldBeUnique),\n    'password': new FormControl('', [Validators.required,\n       Validators.minLength(6)])\n  });\n\n  login() {\n    const data = this.form.value;\n    console.log(data);\n    if (data.username !== 'ram') {\n      this.form.setErrors({\n        invalidLogin: true\n      });\n    }\n  }\n\n  get username() {\n    return this.form.get('username');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/signup-form/signup-form.component.ts","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { reject } from 'q';\r\n\r\nexport class UsernameValidators {\r\n\r\n    static cannotContainSpace(control: AbstractControl): ValidationErrors | null {\r\n        if ((control.value as string).indexOf(' ') !== -1) {\r\n            // return {'cannotContainSpace': 'true'};\r\n            return {cannotContainSpace: true};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static shouldBeUnique(control: AbstractControl): Promise<ValidationErrors | null> {\r\n        return new Promise((resolve, rejects) => {\r\n            setTimeout(() => {\r\n                if (control.value === 'ram') {\r\n                    resolve({shouldBeUnique: true});\r\n                } else {\r\n                    resolve(null);\r\n                    // resolve({'shouldBeUnique': 'falied due to some reason'});//pending never becomes false here\r\n                }\r\n            }, 2000);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/app/signup-form/username.validators.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// S:/fullStack/Angular/learningAngularGIT/BasicsOfAngular/src/main.ts"],"sourceRoot":"webpack:///"}